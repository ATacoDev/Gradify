<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link rel="stylesheet" href="/css/dashboard.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }
        .content {
            display: flex;
        }
        .sidebar {
            width: 200px;
            background-color: #343a40;
            color: white;
            padding: 15px;
        }
        .sidebar h2 {
            margin-top: 0;
        }
        .sidebar a {
            display: block;
            color: white;
            text-decoration: none;
            padding: 10px;
            border-radius: 5px;
            transition: background-color 0.3s, color 0.3s;
        }
        .sidebar a:hover {
            background-color: #495057;
            color: #61dafb;
        }
        .dashboard {
            flex-grow: 1;
            padding: 20px;
        }
        .dashboard-item {
            background: white;
            border-radius: 5px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            padding: 15px;
            display: flex;
            align-items: flex-start;
            gap: 10px;
        }
        .hidden {
            display: none;
        }
        .result {
            margin-top: 10px;
        }
        .over-button {
            background-color: green;
            color: white;
        }
        .under-button {
            background-color: red;
            color: white;
        }
        .reaction-buttons {
            margin-top: 10px;
            display: flex;
            gap: 15px; /* Spacing between buttons */
            padding: 5px 0; /* Padding for a cleaner look */
        }
        .reaction {
            display: flex;
            align-items: center;
            cursor: pointer;
            border: 2px solid #343a40; /* Border to separate reactions */
            border-radius: 5px;
            padding: 5px 10px; /* Padding for better aesthetics */
            transition: border-color 0.3s, transform 0.3s, background-color 0.3s;
        }
        .reaction:hover {
            background-color: #e9ecef; /* Light gray background on hover */
            transform: scale(1.05); /* Scale up effect */
        }
        .reaction-count {
            margin-left: 5px;
        }
        footer {
            text-align: center;
            padding: 10px;
            background: #343a40;
            color: white;
        }
        .profile-pic {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            border: 2px solid #343a40;
        }
        .username {
            color: #343a40;
            font-weight: bold;
            font-size: 14px;
        }
        .text-content {
            flex-grow: 1;
        }
        .reactions {
            display: flex; /* Ensure reactions are in a row */
            gap: 15px; /* Space out reactions */
            margin-top: 10px; /* Margin above reactions */
            padding: 5px 0; /* Adjust padding for a cleaner look */
            border-top: 1px solid #e0e0e0; /* Optional border above reactions for separation */
        }
    </style>
</head>
<body>

    <div class="content">
        <div class="sidebar">
            <h2>Navigation</h2>
            <a href="/profile">Profile</a>
            <a href="/post">Post</a>
        </div>

        <div class="dashboard">
            <!-- Multiple dashboard items -->
            <div class="dashboard-item">
                <img class="profile-pic" src="" alt="Profile Picture">
                <div class="text-content">
                    <div class="username"></div>
                    <h2>Operating Systems Midterm</h2>
                    <p>Over-Under me getting 75%?</p>
                    <div class="reaction-buttons">
                        <button class="over-button" onclick="guess(75, true, this)">Over</button>
                        <button class="under-button" onclick="guess(75, false, this)">Under</button>
                    </div>
                    <div class="result hidden"></div>
                    <div class="reactions hidden">
                        <div class="reaction" onclick="react('laugh', this)">ðŸ˜‚ Laugh <span class="reaction-count"></span></div>
                        <div class="reaction" onclick="react('sad', this)">ðŸ˜¢ Sad <span class="reaction-count"></span></div>
                        <div class="reaction" onclick="react('angry', this)">ðŸ˜¡ Angry <span class="reaction-count"></span></div>
                    </div>
                </div>
            </div>

            <!-- Repeat dashboard-item for more posts -->
            <div class="dashboard-item">
                <img class="profile-pic" src="" alt="Profile Picture">
                <div class="text-content">
                    <div class="username"></div>
                    <h2>Data Structures Midterm</h2>
                    <p>Over-Under me getting 30%?</p>
                    <div class="reaction-buttons">
                        <button class="over-button" onclick="guess(30, true, this)">Over</button>
                        <button class="under-button" onclick="guess(30, false, this)">Under</button>
                    </div>
                    <div class="result hidden"></div>
                    <div class="reactions hidden">
                        <div class="reaction" onclick="react('laugh', this)">ðŸ˜‚ Laugh <span class="reaction-count"></span></div>
                        <div class="reaction" onclick="react('sad', this)">ðŸ˜¢ Sad <span class="reaction-count"></span></div>
                        <div class="reaction" onclick="react('angry', this)">ðŸ˜¡ Angry <span class="reaction-count"></span></div>
                    </div>
                </div>
            </div>

            <!-- Repeat dashboard-item for more posts -->
            <div class="dashboard-item">
                <img class="profile-pic" src="" alt="Profile Picture">
                <div class="text-content">
                    <div class="username"></div>
                    <h2>Data Structures Midterm</h2>
                    <p>Over-Under me getting 30%?</p>
                    <div class="reaction-buttons">
                        <button class="over-button" onclick="guess(30, true, this)">Over</button>
                        <button class="under-button" onclick="guess(30, false, this)">Under</button>
                    </div>
                    <div class="result hidden"></div>
                    <div class="reactions hidden">
                        <div class="reaction" onclick="react('laugh', this)">ðŸ˜‚ Laugh <span class="reaction-count"></span></div>
                        <div class="reaction" onclick="react('sad', this)">ðŸ˜¢ Sad <span class="reaction-count"></span></div>
                        <div class="reaction" onclick="react('angry', this)">ðŸ˜¡ Angry <span class="reaction-count"></span></div>
                    </div>
                </div>
            </div>

            <!-- Repeat dashboard-item for more posts -->
            <div class="dashboard-item">
                <img class="profile-pic" src="" alt="Profile Picture">
                <div class="text-content">
                    <div class="username"></div>
                    <h2>Data Structures Midterm</h2>
                    <p>Over-Under me getting 30%?</p>
                    <div class="reaction-buttons">
                        <button class="over-button" onclick="guess(30, true, this)">Over</button>
                        <button class="under-button" onclick="guess(30, false, this)">Under</button>
                    </div>
                    <div class="result hidden"></div>
                    <div class="reactions hidden">
                        <div class="reaction" onclick="react('laugh', this)">ðŸ˜‚ Laugh <span class="reaction-count"></span></div>
                        <div class="reaction" onclick="react('sad', this)">ðŸ˜¢ Sad <span class="reaction-count"></span></div>
                        <div class="reaction" onclick="react('angry', this)">ðŸ˜¡ Angry <span class="reaction-count"></span></div>
                    </div>
                </div>
            </div>

            <!-- Repeat dashboard-item for more posts -->
            <div class="dashboard-item">
                <img class="profile-pic" src="" alt="Profile Picture">
                <div class="text-content">
                    <div class="username"></div>
                    <h2>Data Structures Midterm</h2>
                    <p>Over-Under me getting 30%?</p>
                    <div class="reaction-buttons">
                        <button class="over-button" onclick="guess(30, true, this)">Over</button>
                        <button class="under-button" onclick="guess(30, false, this)">Under</button>
                    </div>
                    <div class="result hidden"></div>
                    <div class="reactions hidden">
                        <div class="reaction" onclick="react('laugh', this)">ðŸ˜‚ Laugh <span class="reaction-count"></span></div>
                        <div class="reaction" onclick="react('sad', this)">ðŸ˜¢ Sad <span class="reaction-count"></span></div>
                        <div class="reaction" onclick="react('angry', this)">ðŸ˜¡ Angry <span class="reaction-count"></span></div>
                    </div>
                </div>
            </div>

            <!-- Repeat dashboard-item for more posts -->
            <div class="dashboard-item">
                <img class="profile-pic" src="" alt="Profile Picture">
                <div class="text-content">
                    <div class="username"></div>
                    <h2>Data Structures Midterm</h2>
                    <p>Over-Under me getting 30%?</p>
                    <div class="reaction-buttons">
                        <button class="over-button" onclick="guess(30, true, this)">Over</button>
                        <button class="under-button" onclick="guess(30, false, this)">Under</button>
                    </div>
                    <div class="result hidden"></div>
                    <div class="reactions hidden">
                        <div class="reaction" onclick="react('laugh', this)">ðŸ˜‚ Laugh <span class="reaction-count"></span></div>
                        <div class="reaction" onclick="react('sad', this)">ðŸ˜¢ Sad <span class="reaction-count"></span></div>
                        <div class="reaction" onclick="react('angry', this)">ðŸ˜¡ Angry <span class="reaction-count"></span></div>
                    </div>
                </div>
            </div>
            <!-- Add more dashboard-items as needed -->
        </div>
    </div>

    <footer>
        <p>&copy; Gradify 2024</p>
    </footer>
    <script>
        // Randomly generate a number between 1 and 1000
        function getRandomVoteCount() {
            return Math.floor(Math.random() * 1000) + 1;
        }

        // Initialize reaction counts with random values
        let reactionCounts = {
            laugh: getRandomVoteCount(),
            sad: getRandomVoteCount(),
            angry: getRandomVoteCount(),
        };

        async function fetchCatData() {
            const response = await fetch('https://api.thecatapi.com/v1/images/search');
            const data = await response.json();
            return data[0].url;
        }

        function generateRandomCatUsername() {
            const catNames = ['Fluffy', 'Whiskers', 'Mr. Mittens', 'Shadow', 'Simba', 'Ginger', 'Luna', 'Mittens', 'Boots', 'Tiger'];
            const randomIndex = Math.floor(Math.random() * catNames.length);
            return catNames[randomIndex];
        }

        async function setCatProfileData(item) {
            const profilePic = item.querySelector('.profile-pic');
            const usernameDiv = item.querySelector('.username');
            const reactionDivs = item.querySelectorAll('.reaction-count');

            // Fetch cat profile picture
            const catPicUrl = await fetchCatData();
            profilePic.src = catPicUrl;

            // Set random cat username
            const randomUsername = generateRandomCatUsername();
            usernameDiv.textContent = randomUsername;

            // Set random reaction counts
            reactionDivs.forEach((div) => {
                div.textContent = getRandomVoteCount();
            });
        }

        async function initializeDashboard() {
            const dashboardItems = document.querySelectorAll('.dashboard-item');
            for (const item of dashboardItems) {
                await setCatProfileData(item);
            }
        }

        function guess(threshold, isOver, button) {
            const resultDiv = button.closest('.dashboard-item').querySelector('.result');
            const reactionsDiv = button.closest('.dashboard-item').querySelector('.reactions');
            resultDiv.classList.remove('hidden');
            resultDiv.textContent = isOver ? `You guessed Over! Threshold was ${threshold}` : `You guessed Under! Threshold was ${threshold}`;
            reactionsDiv.classList.remove('hidden'); // Show reactions when guessed
            button.classList.add('animated');
            setTimeout(() => {
                button.classList.remove('animated');
            }, 500);
        }

        function react(reactionType, reactionElement) {
            const countSpan = reactionElement.querySelector('.reaction-count');
            const currentCount = parseInt(countSpan.textContent);
            countSpan.textContent = currentCount + 1; // Increment count
        }

        // Initialize the dashboard on page load
        document.addEventListener('DOMContentLoaded', initializeDashboard);
    </script>
</body>
</html>
